name: Reusable Helm Deployment Workflow for Job

on:
  workflow_call:
    inputs:
      DOCKER_IMAGE_NAME:
        required: true
        type: string
        description: "Docker image name to deploy"
      DOCKER_IMAGE_TAG:
        required: true
        type: string
        description: "Docker image tag to deploy"
      ENVIRONMENT:
        required: true
        type: string
        description: "Target environment (production, staging, sandbox)"
      EKS_CLUSTER_NAME:
        required: true
        type: string
        description: "Name of the EKS cluster to deploy to"
      HELM_RELEASE_NAME:
        required: true
        type: string
        description: "Name of the Helm release to deploy"
      VALUES_FILE_NAME:
        required: true
        type: string
        description: "Path to the values file"
      NAMESPACE:
        required: true
        type: string
        description: "Kubernetes namespace to deploy to"
      TIMEOUT:
        required: false
        type: string
        default: "300"
        description: "Timeout for the deployment in seconds"
      TEST_MODE:
        required: false
        type: boolean
        description: "If true, the deployment will not be applied and will run in dry-run mode"
        default: false
    secrets:
      AWS_ACCOUNT_ACCESS_KEY_ID:
        required: true
      AWS_ACCOUNT_SECRET_ACCESS_KEY:
        required: true
      PAT:
        required: true

concurrency:
  group: "${{ inputs.ENVIRONMENT }}-${{ inputs.HELM_RELEASE_NAME }}-deploy"
  cancel-in-progress: true

env:
  CHART_PATH: wheel-deploys/charts/k8s-as-helm-1.1.1.tgz
  VALUES_PATH: wheel-deploys/k8s-helm/${{ inputs.ENVIRONMENT }}/${{ inputs.VALUES_FILE_NAME }}
  SET_IMAGE: containers.migrations.image=${{ inputs.DOCKER_IMAGE_NAME }}:${{ inputs.DOCKER_IMAGE_TAG }}

jobs:
  helm-deploy:
    name: "Helm ${{ inputs.ENVIRONMENT }} Deploy (Job)"
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-24.04
    steps:
      - name: Setup K8s Environment
        uses: ./.github/actions/setup-k8s-env
        with:
          AWS_ACCOUNT_ACCESS_KEY_ID: ${{ secrets.AWS_ACCOUNT_ACCESS_KEY_ID }}
          AWS_ACCOUNT_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCOUNT_SECRET_ACCESS_KEY }}
          PAT: ${{ secrets.PAT }}
          EKS_CLUSTER_NAME: ${{ inputs.EKS_CLUSTER_NAME }}

      - name: Run Helm Diff
        run: |
          helm diff upgrade --install ${{ inputs.HELM_RELEASE_NAME }} ${{ env.CHART_PATH }} \
            -f ${{ env.VALUES_PATH }} \
            --set ${{ env.SET_IMAGE }} \
            --dry-run=server

      - name: Deploy with Helm
        id: deploy
        run: |
          # Deploy the application using Helm
          helm upgrade --install ${{ inputs.HELM_RELEASE_NAME }} ${{ env.CHART_PATH }} \
            --namespace ${{ inputs.NAMESPACE }} --create-namespace \
            -f ${{ env.VALUES_PATH }} \
            --set ${{ env.SET_IMAGE }} \
            --timeout ${{ inputs.TIMEOUT }}s \
            --atomic \
            ${{ inputs.TEST_MODE && '--dry-run=server' || '' }} 